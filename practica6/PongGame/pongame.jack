class PongGame {
    static PongGame instance;
    field Bat bat;
    field Ball ball;
    field boolean exit;
    field int score;
    field int batWidth;

    constructor PongGame new() {
        let batWidth = 50;
        let bat = Bat.new(230, 229, batWidth, 7);
        let ball = Ball.new(253, 222, 0, 511, 0, 229);
        do ball.setDestination(400, 0);

        let exit = false;
        let score = 0;

        return this;
    }

    method void dispose() {
        do bat.dispose();
        do ball.dispose();
        do Memory.deAlloc(this);
        return;
    }

    function void newInstance() {
        let instance = PongGame.new();
        return;
    }

    function PongGame getInstance() {
        return instance;
    }

    method void run() {
        var char key;

        while (~exit) {
            let key = Keyboard.keyPressed();

            if (key = 130) {
                do bat.setDirection(1);
            } else {
                if (key = 132) {
                    do bat.setDirection(2);
                } else {
                    if (key = 140) {
                        let exit = true;
                    }
                }
            }

            do bat.move();
            do moveBall();

            do Sys.wait(16);  // Adjust game speed
        }

        if (exit) {
            do Output.moveCursor(10, 27);
            do Output.printString("Game Over");
        }

        return;
    }

    method void moveBall() {
        var int bouncingDirection, batLeft, batRight, ballLeft, ballRight;

        let wall = ball.move();

        if ((wall > 0) & (wall != lastWall)) {
            let lastWall = wall;
            let bouncingDirection = 0;
            let batLeft = bat.getLeft();
            let batRight = bat.getRight();
            let ballLeft = ball.getLeft();
            let ballRight = ball.getRight();

            if (wall = 4) {
                let exit = (batLeft > ballRight) | (batRight < ballLeft);
                if (~exit) {
                    if (ballRight < (batLeft + 10)) {
                        let bouncingDirection = -1;
                    } else {
                        if (ballLeft > (batRight - 10)) {
                            let bouncingDirection = 1;
                        }
                    }

                    let batWidth = batWidth - 2;
                    do bat.setWidth(batWidth);
                    let score = score + 1;
                    do Output.moveCursor(22, 7);
                    do Output.printInt(score);
                }
            }

            do ball.bounce(bouncingDirection);
        }

        return;
    }
}



